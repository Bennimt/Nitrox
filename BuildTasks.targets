<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask
    TaskName="TransformVersionTask"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
      <AssemblyFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
try {
  File.WriteAllText(AssemblyFile, string.Format("[assembly: System.Reflection.AssemblyVersion(\"1.0.0.{0}\")]", (DateTime.UtcNow - new DateTime(2017, 7, 19)).TotalSeconds.ToString().Substring(0, 5)));
  Console.WriteLine("File modified!");
} catch (IOException) {
  // Multiple build processes can execute this task simultaneously. It doesn't matter, as long as the version
  // is modified (this task has to execute for every project, because it's much harder to figure out which
  // projects vs wants to build, and which one is first. Some projects are even built in parallel!).
  // If the file can't be written, busy-wait until it has been written (otherwise csc may break).
  while (true)
    try {
      using(var f = File.Open(AssemblyFile, FileMode.Open, FileAccess.Read, FileShare.Read))
        break;
    } catch (IOException) {}
}
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="VersionTask" BeforeTargets="BeforeBuild">
     <TransformVersionTask AssemblyFile="$(SolutionDir)Shared\AssemblyInfo.cs"/>
  </Target>
</Project>